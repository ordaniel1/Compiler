.data
string_access_violation: .asciiz "Access Violation"
string_illegal_div_by_0: .asciiz "Illegal Division By Zero"
string_invalid_ptr_dref: .asciiz "Invalid Pointer Dereference"
.text
str_concatination:
str_concatination_Prologue:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	move $fp, $sp
	addi $sp, $sp, -4
	sw $t0, 0($sp)
	addi $sp, $sp, -4
	sw $t1, 0($sp)
	addi $sp, $sp, -4
	sw $t2, 0($sp)
	addi $sp, $sp, -4
	sw $t3, 0($sp)
	addi $sp, $sp, -4
	sw $t4, 0($sp)
	addi $sp, $sp, -4
	sw $t5, 0($sp)
	addi $sp, $sp, -4
	sw $t6, 0($sp)
	addi $sp, $sp, -4
	sw $t7, 0($sp)
	addi $sp, $sp, -4
	sw $t8, 0($sp)
	addi $sp, $sp, -4
	sw $t9, 0($sp)
	lw $t4, 8($fp)
	lw $t3, 12($fp)
	li $t0, 0
Label_8_len_str1_loop:
	lb $t2, 0($t4)
	beq $t2,$zero,Label_9_len_str2_loop
	addiu $t4, $t4, 1
	addiu $t0, $t0, 1
	j Label_8_len_str1_loop
Label_9_len_str2_loop:
	lb $t2, 0($t3)
	beq $t2,$zero,Label_10_allocate_space
	addiu $t3, $t3, 1
	addiu $t0, $t0, 1
	j Label_9_len_str2_loop
Label_10_allocate_space:
	addiu $t0, $t0, 1
	move $a0, $t0
	li $v0, 9
	syscall
	move $t1, $v0
	move $t0, $t1
	lw $t4, 8($fp)
	lw $t3, 12($fp)
Label_11_write_str1_loop:
	lb $t2, 0($t4)
	sb $t2, 0($t1)
	beq $t2,$zero,Label_12_write_str2_loop
	addiu $t4, $t4, 1
	addiu $t1, $t1, 1
	j Label_11_write_str1_loop
Label_12_write_str2_loop:
	lb $t2, 0($t3)
	sb $t2, 0($t1)
	beq $t2,$zero,Label_13_end_concat
	addiu $t3, $t3, 1
	addiu $t1, $t1, 1
	j Label_12_write_str2_loop
Label_13_end_concat:
	move $v0, $t0
str_concatination_Epilogue:
	move $sp, $fp
	lw $t0, -4($sp)
	lw $t1, -8($sp)
	lw $t2, -12($sp)
	lw $t3, -16($sp)
	lw $t4, -20($sp)
	lw $t5, -24($sp)
	lw $t6, -28($sp)
	lw $t7, -32($sp)
	lw $t8, -36($sp)
	lw $t9, -40($sp)
	lw $fp, 0($sp)
	lw $ra, 4($sp)
	addi $sp, $sp, 8
	jr $ra
str_eq:
str_eq_Prologue:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	move $fp, $sp
	addi $sp, $sp, -4
	sw $t0, 0($sp)
	addi $sp, $sp, -4
	sw $t1, 0($sp)
	addi $sp, $sp, -4
	sw $t2, 0($sp)
	addi $sp, $sp, -4
	sw $t3, 0($sp)
	addi $sp, $sp, -4
	sw $t4, 0($sp)
	addi $sp, $sp, -4
	sw $t5, 0($sp)
	addi $sp, $sp, -4
	sw $t6, 0($sp)
	addi $sp, $sp, -4
	sw $t7, 0($sp)
	addi $sp, $sp, -4
	sw $t8, 0($sp)
	addi $sp, $sp, -4
	sw $t9, 0($sp)
	lw $t4, 8($fp)
	lw $t3, 12($fp)
	li $t2, 1
Label_16_str_eq_loop:
	lb $t1, 0($t4)
	lb $t0, 0($t3)
	bne $t1,$t0,Label_15_AssignZero
	beq $t1,$zero,Label_14_str_eq_end
	addiu $t4, $t4, 1
	addiu $t3, $t3, 1
	j Label_16_str_eq_loop
Label_15_AssignZero:
	li $t2, 0
Label_14_str_eq_end:
	move $v0, $t2
str_eq_Epilogue:
	move $sp, $fp
	lw $t0, -4($sp)
	lw $t1, -8($sp)
	lw $t2, -12($sp)
	lw $t3, -16($sp)
	lw $t4, -20($sp)
	lw $t5, -24($sp)
	lw $t6, -28($sp)
	lw $t7, -32($sp)
	lw $t8, -36($sp)
	lw $t9, -40($sp)
	lw $fp, 0($sp)
	lw $ra, 4($sp)
	addi $sp, $sp, 8
	jr $ra
exit_div_by_zero:
exit_div_by_zero_Epilogue:
	la $a0, string_illegal_div_by_0
	li $v0, 4
	syscall
	li $v0, 10
	syscall
exit_invalid_ptr_dref:
exit_invalid_ptr_dref_Epilogue:
	la $a0, string_invalid_ptr_dref
	li $v0, 4
	syscall
	li $v0, 10
	syscall
exit_out_of_bound:
exit_out_of_bound_Epilogue:
	la $a0, string_access_violation
	li $v0, 4
	syscall
	li $v0, 10
	syscall
IsPrime:
IsPrime_Prologue:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	move $fp, $sp
	addi $sp, $sp, -4
	sw $t0, 0($sp)
	addi $sp, $sp, -4
	sw $t1, 0($sp)
	addi $sp, $sp, -4
	sw $t2, 0($sp)
	addi $sp, $sp, -4
	sw $t3, 0($sp)
	addi $sp, $sp, -4
	sw $t4, 0($sp)
	addi $sp, $sp, -4
	sw $t5, 0($sp)
	addi $sp, $sp, -4
	sw $t6, 0($sp)
	addi $sp, $sp, -4
	sw $t7, 0($sp)
	addi $sp, $sp, -4
	sw $t8, 0($sp)
	addi $sp, $sp, -4
	sw $t9, 0($sp)
	addi $sp, $sp, -8
	li $t0, 2
	sw $t0, -44($fp)
	li $t0, 2
	sw $t0, -48($fp)
Label_1_start:
	lw $t1, -44($fp)
	lw $t0, 8($fp)
	blt $t1,$t0,Label_18_AssignOne
	bge $t1,$t0,Label_19_AssignZero
Label_18_AssignOne:
	li $t0, 1
	j Label_17_end
Label_19_AssignZero:
	li $t0, 0
	j Label_17_end
Label_17_end:
	beq $t0,$zero,Label_0_end
	li $t0, 2
	sw $t0, -48($fp)
Label_3_start:
	lw $t1, -48($fp)
	lw $t0, 8($fp)
	blt $t1,$t0,Label_21_AssignOne
	bge $t1,$t0,Label_22_AssignZero
Label_21_AssignOne:
	li $t0, 1
	j Label_20_end
Label_22_AssignZero:
	li $t0, 0
	j Label_20_end
Label_20_end:
	beq $t0,$zero,Label_2_end
	lw $t1, -44($fp)
	lw $t0, -48($fp)
	mul $t1,$t1,$t0
	li $t0, -32768
	bge $t1,$t0,Label_23_check_overflow
	li $t1, -32768
	j Label_24_end
Label_23_check_overflow:
	li $t0, 32767
	ble $t1,$t0,Label_24_end
	li $t1, 32767
Label_24_end:
	lw $t0, 8($fp)
	beq $t1,$t0,Label_26_AssignOne
	bne $t1,$t0,Label_27_AssignZero
Label_26_AssignOne:
	li $t0, 1
	j Label_25_end
Label_27_AssignZero:
	li $t0, 0
	j Label_25_end
Label_25_end:
	beq $t0,$zero,Label_4_end
	li $t0, 0
	move $v0, $t0
	j IsPrime_Epilogue
Label_4_end:
	lw $t1, -48($fp)
	li $t0, 1
	add $t1,$t1,$t0
	li $t0, -32768
	bge $t1,$t0,Label_28_check_overflow
	li $t1, -32768
	j Label_29_end
Label_28_check_overflow:
	li $t0, 32767
	ble $t1,$t0,Label_29_end
	li $t1, 32767
Label_29_end:
	sw $t1, -48($fp)
	j Label_3_start
Label_2_end:
	lw $t1, -44($fp)
	li $t0, 1
	add $t1,$t1,$t0
	li $t0, -32768
	bge $t1,$t0,Label_30_check_overflow
	li $t1, -32768
	j Label_31_end
Label_30_check_overflow:
	li $t0, 32767
	ble $t1,$t0,Label_31_end
	li $t1, 32767
Label_31_end:
	sw $t1, -44($fp)
	j Label_1_start
Label_0_end:
	li $t0, 1
	move $v0, $t0
	j IsPrime_Epilogue
IsPrime_Epilogue:
	move $sp, $fp
	lw $t0, -4($sp)
	lw $t1, -8($sp)
	lw $t2, -12($sp)
	lw $t3, -16($sp)
	lw $t4, -20($sp)
	lw $t5, -24($sp)
	lw $t6, -28($sp)
	lw $t7, -32($sp)
	lw $t8, -36($sp)
	lw $t9, -40($sp)
	lw $fp, 0($sp)
	lw $ra, 4($sp)
	addi $sp, $sp, 8
	jr $ra
PrintPrimes:
PrintPrimes_Prologue:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	move $fp, $sp
	addi $sp, $sp, -4
	sw $t0, 0($sp)
	addi $sp, $sp, -4
	sw $t1, 0($sp)
	addi $sp, $sp, -4
	sw $t2, 0($sp)
	addi $sp, $sp, -4
	sw $t3, 0($sp)
	addi $sp, $sp, -4
	sw $t4, 0($sp)
	addi $sp, $sp, -4
	sw $t5, 0($sp)
	addi $sp, $sp, -4
	sw $t6, 0($sp)
	addi $sp, $sp, -4
	sw $t7, 0($sp)
	addi $sp, $sp, -4
	sw $t8, 0($sp)
	addi $sp, $sp, -4
	sw $t9, 0($sp)
	addi $sp, $sp, -4
	lw $t0, 8($fp)
	sw $t0, -44($fp)
Label_6_start:
	lw $t2, -44($fp)
	lw $t1, 12($fp)
	li $t0, 1
	add $t1,$t1,$t0
	li $t0, -32768
	bge $t1,$t0,Label_32_check_overflow
	li $t1, -32768
	j Label_33_end
Label_32_check_overflow:
	li $t0, 32767
	ble $t1,$t0,Label_33_end
	li $t1, 32767
Label_33_end:
	blt $t2,$t1,Label_35_AssignOne
	bge $t2,$t1,Label_36_AssignZero
Label_35_AssignOne:
	li $t0, 1
	j Label_34_end
Label_36_AssignZero:
	li $t0, 0
	j Label_34_end
Label_34_end:
	beq $t0,$zero,Label_5_end
	lw $t0, -44($fp)
	addi $sp, $sp, -4
	sw $t0, 0($sp)
	jal IsPrime
	addi $sp, $sp, 4
	move $t0, $v0
	beq $t0,$zero,Label_7_end
	lw $t0, -44($fp)
	move $a0,$t0
	li $v0,1
	syscall
	li $a0,32
	li $v0,11
	syscall
Label_7_end:
	lw $t1, -44($fp)
	li $t0, 1
	add $t1,$t1,$t0
	li $t0, -32768
	bge $t1,$t0,Label_37_check_overflow
	li $t1, -32768
	j Label_38_end
Label_37_check_overflow:
	li $t0, 32767
	ble $t1,$t0,Label_38_end
	li $t1, 32767
Label_38_end:
	sw $t1, -44($fp)
	j Label_6_start
Label_5_end:
PrintPrimes_Epilogue:
	move $sp, $fp
	lw $t0, -4($sp)
	lw $t1, -8($sp)
	lw $t2, -12($sp)
	lw $t3, -16($sp)
	lw $t4, -20($sp)
	lw $t5, -24($sp)
	lw $t6, -28($sp)
	lw $t7, -32($sp)
	lw $t8, -36($sp)
	lw $t9, -40($sp)
	lw $fp, 0($sp)
	lw $ra, 4($sp)
	addi $sp, $sp, 8
	jr $ra
user_main:
user_main_Prologue:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	move $fp, $sp
	addi $sp, $sp, -4
	sw $t0, 0($sp)
	addi $sp, $sp, -4
	sw $t1, 0($sp)
	addi $sp, $sp, -4
	sw $t2, 0($sp)
	addi $sp, $sp, -4
	sw $t3, 0($sp)
	addi $sp, $sp, -4
	sw $t4, 0($sp)
	addi $sp, $sp, -4
	sw $t5, 0($sp)
	addi $sp, $sp, -4
	sw $t6, 0($sp)
	addi $sp, $sp, -4
	sw $t7, 0($sp)
	addi $sp, $sp, -4
	sw $t8, 0($sp)
	addi $sp, $sp, -4
	sw $t9, 0($sp)
	li $t1, 2
	li $t0, 100
	addi $sp, $sp, -4
	sw $t0, 0($sp)
	addi $sp, $sp, -4
	sw $t1, 0($sp)
	jal PrintPrimes
	addi $sp, $sp, 8
user_main_Epilogue:
	move $sp, $fp
	lw $t0, -4($sp)
	lw $t1, -8($sp)
	lw $t2, -12($sp)
	lw $t3, -16($sp)
	lw $t4, -20($sp)
	lw $t5, -24($sp)
	lw $t6, -28($sp)
	lw $t7, -32($sp)
	lw $t8, -36($sp)
	lw $t9, -40($sp)
	lw $fp, 0($sp)
	lw $ra, 4($sp)
	addi $sp, $sp, 8
	jr $ra
main:
	jal user_main
	li $v0, 10
	syscall
